"""empty message

Revision ID: 362ccb34b745
Revises: 
Create Date: 2019-09-16 16:03:28.411531

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '362ccb34b745'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.TEXT(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('organization',
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('org_name', sa.String(length=50), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('org_id')
    )
    op.create_table('permission',
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('permission_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('permission_id')
    )
    op.create_table('personal_token',
    sa.Column('personal_token_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_personal_token', sa.String(length=256), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('personal_token_id')
    )
    op.create_index(op.f('ix_personal_token_encrypted_personal_token'), 'personal_token', ['encrypted_personal_token'], unique=True)
    op.create_index(op.f('ix_personal_token_user_id'), 'personal_token', ['user_id'], unique=False)
    op.create_table('session',
    sa.Column('session_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('menu',
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.Column('menu_name', sa.String(length=60), nullable=False),
    sa.Column('menu_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.permission_id'], ),
    sa.PrimaryKeyConstraint('menu_id')
    )
    op.create_table('project',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=50), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organization.org_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_index(op.f('ix_project_org_id'), 'project', ['org_id'], unique=False)
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organization.org_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_index(op.f('ix_role_org_id'), 'role', ['org_id'], unique=False)
    op.create_index(op.f('ix_role_role_id'), 'role', ['role_id'], unique=False)
    op.create_table('db_connection',
    sa.Column('db_connection_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('db_connection_name', sa.Text(), nullable=True),
    sa.Column('db_type', sa.SMALLINT(), nullable=False),
    sa.Column('db_name', sa.String(length=80), nullable=False),
    sa.Column('db_hostname', sa.String(length=255), nullable=False),
    sa.Column('db_username', sa.String(length=80), nullable=False),
    sa.Column('db_encrypted_password', sa.Text(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('db_connection_id')
    )
    op.create_index(op.f('ix_db_connection_project_id'), 'db_connection', ['project_id'], unique=False)
    op.create_table('role_permission',
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organization.org_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.permission_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('org_id', 'role_id', 'permission_id')
    )
    op.create_index(op.f('ix_role_permission_org_id'), 'role_permission', ['org_id'], unique=False)
    op.create_index(op.f('ix_role_permission_permission_id'), 'role_permission', ['permission_id'], unique=False)
    op.create_index(op.f('ix_role_permission_role_id'), 'role_permission', ['role_id'], unique=False)
    op.create_table('test_suite',
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('excel_name', sa.Text(), nullable=True),
    sa.Column('test_suite_name', sa.Text(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('test_suite_id')
    )
    op.create_index(op.f('ix_test_suite_project_id'), 'test_suite', ['project_id'], unique=False)
    op.create_table('user_org_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organization.org_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'org_id', 'role_id')
    )
    op.create_index(op.f('ix_user_org_role_org_id'), 'user_org_role', ['org_id'], unique=False)
    op.create_index(op.f('ix_user_org_role_role_id'), 'user_org_role', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_org_role_user_id'), 'user_org_role', ['user_id'], unique=False)
    op.create_table('user_project_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organization.org_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'org_id', 'project_id', 'role_id')
    )
    op.create_index(op.f('ix_user_project_role_org_id'), 'user_project_role', ['org_id'], unique=False)
    op.create_index(op.f('ix_user_project_role_project_id'), 'user_project_role', ['project_id'], unique=False)
    op.create_index(op.f('ix_user_project_role_role_id'), 'user_project_role', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_project_role_user_id'), 'user_project_role', ['user_id'], unique=False)
    op.create_table('job',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_external_trigger', sa.Boolean(), nullable=False),
    sa.Column('execution_status', sa.SMALLINT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suite.test_suite_id'], ),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_index(op.f('ix_job_test_suite_id'), 'job', ['test_suite_id'], unique=False)
    op.create_table('query',
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('query_string', sa.Text(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('execution_status', sa.SMALLINT(), nullable=False),
    sa.Column('db_connection_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('query_result', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['db_connection_id'], ['db_connection.db_connection_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('query_id')
    )
    op.create_index(op.f('ix_query_db_connection_id'), 'query', ['db_connection_id'], unique=False)
    op.create_index(op.f('ix_query_project_id'), 'query', ['project_id'], unique=False)
    op.create_table('test_case',
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('test_case_class', sa.SMALLINT(), nullable=False),
    sa.Column('latest_execution_status', sa.SMALLINT(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('test_case_detail', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suite.test_suite_id'], ),
    sa.PrimaryKeyConstraint('test_case_id')
    )
    op.create_index(op.f('ix_test_case_test_suite_id'), 'test_case', ['test_suite_id'], unique=False)
    op.create_table('test_case_log',
    sa.Column('test_case_log_id', sa.Integer(), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('execution_status', sa.SMALLINT(), nullable=False),
    sa.Column('dqi_percentage', sa.Float(precision=2), nullable=True),
    sa.Column('execution_log', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.test_case_id'], ),
    sa.PrimaryKeyConstraint('test_case_log_id')
    )
    op.create_index(op.f('ix_test_case_log_job_id'), 'test_case_log', ['job_id'], unique=False)
    op.create_index(op.f('ix_test_case_log_modified_at'), 'test_case_log', ['modified_at'], unique=False)
    op.create_index(op.f('ix_test_case_log_test_case_id'), 'test_case_log', ['test_case_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_case_log_test_case_id'), table_name='test_case_log')
    op.drop_index(op.f('ix_test_case_log_modified_at'), table_name='test_case_log')
    op.drop_index(op.f('ix_test_case_log_job_id'), table_name='test_case_log')
    op.drop_table('test_case_log')
    op.drop_index(op.f('ix_test_case_test_suite_id'), table_name='test_case')
    op.drop_table('test_case')
    op.drop_index(op.f('ix_query_project_id'), table_name='query')
    op.drop_index(op.f('ix_query_db_connection_id'), table_name='query')
    op.drop_table('query')
    op.drop_index(op.f('ix_job_test_suite_id'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_user_project_role_user_id'), table_name='user_project_role')
    op.drop_index(op.f('ix_user_project_role_role_id'), table_name='user_project_role')
    op.drop_index(op.f('ix_user_project_role_project_id'), table_name='user_project_role')
    op.drop_index(op.f('ix_user_project_role_org_id'), table_name='user_project_role')
    op.drop_table('user_project_role')
    op.drop_index(op.f('ix_user_org_role_user_id'), table_name='user_org_role')
    op.drop_index(op.f('ix_user_org_role_role_id'), table_name='user_org_role')
    op.drop_index(op.f('ix_user_org_role_org_id'), table_name='user_org_role')
    op.drop_table('user_org_role')
    op.drop_index(op.f('ix_test_suite_project_id'), table_name='test_suite')
    op.drop_table('test_suite')
    op.drop_index(op.f('ix_role_permission_role_id'), table_name='role_permission')
    op.drop_index(op.f('ix_role_permission_permission_id'), table_name='role_permission')
    op.drop_index(op.f('ix_role_permission_org_id'), table_name='role_permission')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_db_connection_project_id'), table_name='db_connection')
    op.drop_table('db_connection')
    op.drop_index(op.f('ix_role_role_id'), table_name='role')
    op.drop_index(op.f('ix_role_org_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_project_org_id'), table_name='project')
    op.drop_table('project')
    op.drop_table('menu')
    op.drop_table('session')
    op.drop_index(op.f('ix_personal_token_user_id'), table_name='personal_token')
    op.drop_index(op.f('ix_personal_token_encrypted_personal_token'), table_name='personal_token')
    op.drop_table('personal_token')
    op.drop_table('permission')
    op.drop_table('organization')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
